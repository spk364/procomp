version: '3.9'

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: procomp_staging
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d procomp_staging"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    env_file:
      - .env.staging
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - ENVIRONMENT=staging
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_JWT_SECRET=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_ANON_KEY}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  web:
    image: node:18-bullseye
    working_dir: /workspace
    command: bash -lc "corepack enable && pnpm install --frozen-lockfile && pnpm --filter ./apps/web dev -- --port 3000"
    env_file:
      - .env.staging
    environment:
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
      - NEXT_PUBLIC_API_WS_URL=${NEXT_PUBLIC_API_WS_URL}
    ports:
      - "3000:3000"
    volumes:
      - ./:/workspace
    depends_on:
      api:
        condition: service_started

networks:
  default:
    name: procomp-staging