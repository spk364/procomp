name: Performance Tests

on:
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  perf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .env.staging
        run: |
          cat > .env.staging <<'EOF'
          # API runtime expects asyncpg DSN
          DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/procomp_staging
          REDIS_URL=redis://redis:6379/0
          ENVIRONMENT=staging
          SUPABASE_URL=http://localhost
          SUPABASE_ANON_KEY=dev-secret
          NEXT_PUBLIC_API_BASE_URL=http://localhost:8000
          NEXT_PUBLIC_API_WS_URL=ws://localhost:8000
          EOF

      - name: Start stack
        run: |
          docker compose -f docker-compose.staging.yml up -d --build postgres redis api
          sleep 5
          docker compose -f docker-compose.staging.yml logs --no-color --tail=100 api | cat

      - name: Wait for API
        run: |
          for i in {1..60}; do curl -fsS http://localhost:8000/health && break || sleep 2; done
          curl -fsS http://localhost:8000/health | cat

      - name: Setup k6
        uses: grafana/setup-k6-action@v1
        with:
          version: '0.49.0'

      - name: Run HTTP smoke
        run: |
          k6 run perf/api/http_smoke.js --vus 5 --duration 10s

      - name: Run WS match broadcast perf
        env:
          K6_WS_BASE: ws://localhost:8000
          K6_WS_SECRET: dev-secret
        run: |
          k6 run perf/ws/ws_match_broadcast.js --vus 50 --duration 30s

      - name: Run WS tournament broadcast perf
        env:
          K6_WS_BASE: ws://localhost:8000
          K6_WS_SECRET: dev-secret
        run: |
          k6 run perf/ws/ws_tournament_broadcast.js --vus 50 --duration 30s

      - name: Teardown
        if: always()
        run: |
          docker compose -f docker-compose.staging.yml down -v