name: API CI

on:
  push:
    paths:
      - 'apps/api/**'
      - '.github/workflows/api-ci.yml'
  pull_request:
    paths:
      - 'apps/api/**'
      - '.github/workflows/api-ci.yml'

permissions:
  contents: read
  packages: write

jobs:
  test:
    name: Test (pytest)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install API dependencies
        working-directory: apps/api
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: Run pytest
        working-directory: .
        env:
          PYTHONUNBUFFERED: '1'
        run: |
          pytest -q

  docker:
    name: Build and Push GHCR Image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./apps/api
          file: ./apps/api/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/procomp-api:latest
            ghcr.io/${{ github.repository_owner }}/procomp-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to Railway (api)
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main' && vars.RAILWAY_DEPLOY_API == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Railway CLI
        run: npm i -g @railway/cli

      - name: Link Railway project
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
        run: |
          railway --version
          railway link --project $RAILWAY_PROJECT_ID

      - name: Deploy service api
        working-directory: apps/api
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          railway up --service api --detach